{"name": "课程管理相关接口", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TestCase.test_live_class.TestLiveClass object at 0x00000234CECA1220>\ncase = {'data': '{\"id\":\"\",\\n\"name\":\"aaaaa1\",\\n\"is_live\":1,\\n\"start_time\":\"\",\\n\"end_time\":\"\"}', 'header': '{\"Content-Type\"\\n:\"application/json\"}', 'url': '/api/admin/course_config/add', '用例标题': '直播课程类型添加', ...}\n\n    @allure.title('课程管理相关接口')\n    @pytest.mark.parametrize('case',all_case)\n    def test_add_course(self,case):\n        url = case['url']\n        get_method = case['请求方式']\n        data = case['data'].encode('utf-8')\n        get_header = eval(case['header'])\n        code = case['预期状态码']\n        key = 'wm-live-api'\n        print(type(case),url,get_method,get_header,code)\n        if get_method == 'post':\n            res = RequestBase().send_post(url=url,data=data,key=key,cookie=None,header=get_header)\n        else:\n            res = RequestBase().send_get(url=url,params=data,key=key,cookie=None,header=get_header)\n        test_assert = Assert()\n        res = res.json()\n        res_code = res['code']\n>       assert test_assert.assertCode(res_code, code)\n\ntest_live_class.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.handle_assert.Assert object at 0x00000234CECA12B0>, code = 370001, expected_code = 200\n\n    def assertCode(self,code,expected_code):\n        \"\"\"\n        验证response状态码\n        :param code:\n        :param expected_code:\n        :return:\n        \"\"\"\n        try:\n>           assert code == expected_code\nE           AssertionError\n\n..\\Common\\handle_assert.py:59: AssertionError"}, "attachments": [{"name": "log", "source": "f43d1736-c72c-4c0b-9c0c-81d16392242b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "cb8c608c-e1f8-4802-b793-ff88880dd6b0-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a57864a0-a3a4-4847-86b8-9c21d076bdec-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'用例编号': 'live_class_001', '用例标题': '直播课程类型添加', 'url': '/api/admin/course_config/add', '请求方式': 'post', 'data': '{\"id\":\"\",\\n\"name\":\"aaaaa1\",\\n\"is_live\":1,\\n\"start_time\":\"\",\\n\"end_time\":\"\"}', 'header': '{\"Content-Type\"\\n:\"application/json\"}', '预期状态码': 200, '预期结果': '添加成功'}"}], "start": 1696496259944, "stop": 1696496260277, "uuid": "019c0042-4e5d-4b0e-8d73-9fe4156714e5", "historyId": "f043a9baea9c5fc88e95d7b73479875c", "testCaseId": "7726be10cb54f33b77588a175b9d54ad", "fullName": "test_live_class#test_add_course", "labels": [{"name": "epic", "value": "直播项目"}, {"name": "feature", "value": "课程管理"}, {"name": "suite", "value": "test_live_class"}, {"name": "subSuite", "value": "TestLiveClass"}, {"name": "host", "value": "MS-MHBZJMSYRUBS"}, {"name": "thread", "value": "10944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_live_class"}]}